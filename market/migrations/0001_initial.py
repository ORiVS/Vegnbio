# Generated by Django 5.2.5 on 2025-08-12 22:29

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('menu', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='SupplierOffer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('product_name', models.CharField(max_length=120)),
                ('description', models.TextField(blank=True)),
                ('is_bio', models.BooleanField(default=True)),
                ('producer_name', models.CharField(blank=True, max_length=120, null=True)),
                ('region', models.CharField(default='Île-de-France', max_length=120)),
                ('unit', models.CharField(default='kg', max_length=32)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('min_order_qty', models.DecimalField(decimal_places=2, default=1, max_digits=10, validators=[django.core.validators.MinValueValidator(0.01)])),
                ('stock_qty', models.DecimalField(decimal_places=2, default=0, max_digits=12, validators=[django.core.validators.MinValueValidator(0)])),
                ('available_from', models.DateField(blank=True, null=True)),
                ('available_to', models.DateField(blank=True, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Brouillon'), ('PUBLISHED', 'Publiée'), ('UNLISTED', 'Retirée'), ('FLAGGED', 'Signalée')], default='DRAFT', max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('allergens', models.ManyToManyField(blank=True, related_name='supplier_offers', to='menu.allergen')),
                ('supplier', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offers', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OfferReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reason', models.CharField(max_length=200)),
                ('details', models.TextField(blank=True)),
                ('status', models.CharField(choices=[('NEW', 'Nouveau'), ('REVIEWED', 'Examiné'), ('ACTION_TAKEN', 'Action prise')], default='NEW', max_length=16)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('reporter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offer_reports', to=settings.AUTH_USER_MODEL)),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='market.supplieroffer')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='OfferReview',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rating', models.PositiveSmallIntegerField(validators=[django.core.validators.MinValueValidator(1)])),
                ('comment', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='offer_reviews', to=settings.AUTH_USER_MODEL)),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='market.supplieroffer')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('offer', 'author')},
            },
        ),
    ]
